// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: ibc/applications/fee/v1/genesis.proto

package types

import (
	_ "github.com/cosmos/gogoproto/gogoproto"
	types "github.com/cosmos/ibc-go/v7/modules/core/04-channel/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState defines the ICS29 fee middleware genesis state
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of identified packet fees
	IdentifiedFees []*IdentifiedPacketFees `protobuf:"bytes,1,rep,name=identified_fees,json=identifiedFees,proto3" json:"identified_fees,omitempty"`
	// list of fee enabled channels
	FeeEnabledChannels []*FeeEnabledChannel `protobuf:"bytes,2,rep,name=fee_enabled_channels,json=feeEnabledChannels,proto3" json:"fee_enabled_channels,omitempty"`
	// list of registered payees
	RegisteredPayees []*RegisteredPayee `protobuf:"bytes,3,rep,name=registered_payees,json=registeredPayees,proto3" json:"registered_payees,omitempty"`
	// list of registered counterparty payees
	RegisteredCounterpartyPayees []*RegisteredCounterpartyPayee `protobuf:"bytes,4,rep,name=registered_counterparty_payees,json=registeredCounterpartyPayees,proto3" json:"registered_counterparty_payees,omitempty"`
	// list of forward relayer addresses
	ForwardRelayers []*ForwardRelayerAddress `protobuf:"bytes,5,rep,name=forward_relayers,json=forwardRelayers,proto3" json:"forward_relayers,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetIdentifiedFees() []*IdentifiedPacketFees {
	if x != nil {
		return x.IdentifiedFees
	}
	return nil
}

func (x *GenesisState) GetFeeEnabledChannels() []*FeeEnabledChannel {
	if x != nil {
		return x.FeeEnabledChannels
	}
	return nil
}

func (x *GenesisState) GetRegisteredPayees() []*RegisteredPayee {
	if x != nil {
		return x.RegisteredPayees
	}
	return nil
}

func (x *GenesisState) GetRegisteredCounterpartyPayees() []*RegisteredCounterpartyPayee {
	if x != nil {
		return x.RegisteredCounterpartyPayees
	}
	return nil
}

func (x *GenesisState) GetForwardRelayers() []*ForwardRelayerAddress {
	if x != nil {
		return x.ForwardRelayers
	}
	return nil
}

// FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
type FeeEnabledChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique port identifier
	PortId string `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	// unique channel identifier
	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *FeeEnabledChannel) Reset() {
	*x = FeeEnabledChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeEnabledChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeEnabledChannel) ProtoMessage() {}

func (x *FeeEnabledChannel) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeEnabledChannel.ProtoReflect.Descriptor instead.
func (*FeeEnabledChannel) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *FeeEnabledChannel) GetPortId() string {
	if x != nil {
		return x.PortId
	}
	return ""
}

func (x *FeeEnabledChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// RegisteredPayee contains the relayer address and payee address for a specific channel
type RegisteredPayee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique channel identifier
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// the relayer address
	Relayer string `protobuf:"bytes,2,opt,name=relayer,proto3" json:"relayer,omitempty"`
	// the payee address
	Payee string `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
}

func (x *RegisteredPayee) Reset() {
	*x = RegisteredPayee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredPayee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredPayee) ProtoMessage() {}

func (x *RegisteredPayee) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredPayee.ProtoReflect.Descriptor instead.
func (*RegisteredPayee) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *RegisteredPayee) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RegisteredPayee) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *RegisteredPayee) GetPayee() string {
	if x != nil {
		return x.Payee
	}
	return ""
}

// RegisteredCounterpartyPayee contains the relayer address and counterparty payee address for a specific channel (used
// for recv fee distribution)
type RegisteredCounterpartyPayee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unique channel identifier
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// the relayer address
	Relayer string `protobuf:"bytes,2,opt,name=relayer,proto3" json:"relayer,omitempty"`
	// the counterparty payee address
	CounterpartyPayee string `protobuf:"bytes,3,opt,name=counterparty_payee,json=counterpartyPayee,proto3" json:"counterparty_payee,omitempty"`
}

func (x *RegisteredCounterpartyPayee) Reset() {
	*x = RegisteredCounterpartyPayee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredCounterpartyPayee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredCounterpartyPayee) ProtoMessage() {}

func (x *RegisteredCounterpartyPayee) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredCounterpartyPayee.ProtoReflect.Descriptor instead.
func (*RegisteredCounterpartyPayee) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *RegisteredCounterpartyPayee) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RegisteredCounterpartyPayee) GetRelayer() string {
	if x != nil {
		return x.Relayer
	}
	return ""
}

func (x *RegisteredCounterpartyPayee) GetCounterpartyPayee() string {
	if x != nil {
		return x.CounterpartyPayee
	}
	return ""
}

// ForwardRelayerAddress contains the forward relayer address and PacketId used for async acknowledgements
type ForwardRelayerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the forward relayer address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// unique packet identifer comprised of the channel ID, port ID and sequence
	PacketId *types.PacketId `protobuf:"bytes,2,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
}

func (x *ForwardRelayerAddress) Reset() {
	*x = ForwardRelayerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForwardRelayerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardRelayerAddress) ProtoMessage() {}

func (x *ForwardRelayerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_applications_fee_v1_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardRelayerAddress.ProtoReflect.Descriptor instead.
func (*ForwardRelayerAddress) Descriptor() ([]byte, []int) {
	return file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP(), []int{4}
}

func (x *ForwardRelayerAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ForwardRelayerAddress) GetPacketId() *types.PacketId {
	if x != nil {
		return x.PacketId
	}
	return nil
}

var File_ibc_applications_fee_v1_genesis_proto protoreflect.FileDescriptor

var file_ibc_applications_fee_v1_genesis_proto_rawDesc = []byte{
	0x0a, 0x25, 0x69, 0x62, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x66, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x69, 0x62, 0x63, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x05, 0x0a,
	0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x76, 0x0a,
	0x0f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x73, 0x42, 0x1e, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x16, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x66, 0x65, 0x65, 0x73, 0x22, 0x52, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x66, 0x65, 0x65, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x42, 0x23, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x1b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x66, 0x65, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x22, 0x52, 0x12, 0x66, 0x65, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x77, 0x0a, 0x11, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x42, 0x20,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x18, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x73, 0x22,
	0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x50, 0x61, 0x79, 0x65,
	0x65, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x1e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x62,
	0x63, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x65,
	0x65, 0x42, 0x2d, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x25, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x73, 0x22,
	0x52, 0x1c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x65, 0x65, 0x73, 0x12, 0x7a,
	0x0a, 0x10, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x1f, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde,
	0x1f, 0x17, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x76, 0x0a, 0x11, 0x46, 0x65,
	0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0xf2, 0xde, 0x1f, 0x0e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x22, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x15, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x22, 0x77, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xf2, 0xde, 0x1f, 0x11, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x15, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x12, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x65,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xf2, 0xde, 0x1f, 0x19, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x70, 0x61, 0x79, 0x65, 0x65, 0x22, 0x52, 0x11, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x50, 0x61, 0x79, 0x65, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x54, 0x0a,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x42,
	0x18, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x10, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x62, 0x63, 0x2d, 0x67, 0x6f, 0x2f,
	0x76, 0x37, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f,
	0x32, 0x39, 0x2d, 0x66, 0x65, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_applications_fee_v1_genesis_proto_rawDescOnce sync.Once
	file_ibc_applications_fee_v1_genesis_proto_rawDescData = file_ibc_applications_fee_v1_genesis_proto_rawDesc
)

func file_ibc_applications_fee_v1_genesis_proto_rawDescGZIP() []byte {
	file_ibc_applications_fee_v1_genesis_proto_rawDescOnce.Do(func() {
		file_ibc_applications_fee_v1_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_applications_fee_v1_genesis_proto_rawDescData)
	})
	return file_ibc_applications_fee_v1_genesis_proto_rawDescData
}

var file_ibc_applications_fee_v1_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ibc_applications_fee_v1_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),                // 0: ibc.applications.fee.v1.GenesisState
	(*FeeEnabledChannel)(nil),           // 1: ibc.applications.fee.v1.FeeEnabledChannel
	(*RegisteredPayee)(nil),             // 2: ibc.applications.fee.v1.RegisteredPayee
	(*RegisteredCounterpartyPayee)(nil), // 3: ibc.applications.fee.v1.RegisteredCounterpartyPayee
	(*ForwardRelayerAddress)(nil),       // 4: ibc.applications.fee.v1.ForwardRelayerAddress
	(*IdentifiedPacketFees)(nil),        // 5: ibc.applications.fee.v1.IdentifiedPacketFees
	(*types.PacketId)(nil),              // 6: ibc.core.channel.v1.PacketId
}
var file_ibc_applications_fee_v1_genesis_proto_depIdxs = []int32{
	5, // 0: ibc.applications.fee.v1.GenesisState.identified_fees:type_name -> ibc.applications.fee.v1.IdentifiedPacketFees
	1, // 1: ibc.applications.fee.v1.GenesisState.fee_enabled_channels:type_name -> ibc.applications.fee.v1.FeeEnabledChannel
	2, // 2: ibc.applications.fee.v1.GenesisState.registered_payees:type_name -> ibc.applications.fee.v1.RegisteredPayee
	3, // 3: ibc.applications.fee.v1.GenesisState.registered_counterparty_payees:type_name -> ibc.applications.fee.v1.RegisteredCounterpartyPayee
	4, // 4: ibc.applications.fee.v1.GenesisState.forward_relayers:type_name -> ibc.applications.fee.v1.ForwardRelayerAddress
	6, // 5: ibc.applications.fee.v1.ForwardRelayerAddress.packet_id:type_name -> ibc.core.channel.v1.PacketId
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ibc_applications_fee_v1_genesis_proto_init() }
func file_ibc_applications_fee_v1_genesis_proto_init() {
	if File_ibc_applications_fee_v1_genesis_proto != nil {
		return
	}
	file_ibc_applications_fee_v1_fee_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ibc_applications_fee_v1_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_genesis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeEnabledChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_genesis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredPayee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_genesis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredCounterpartyPayee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_applications_fee_v1_genesis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForwardRelayerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_applications_fee_v1_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_applications_fee_v1_genesis_proto_goTypes,
		DependencyIndexes: file_ibc_applications_fee_v1_genesis_proto_depIdxs,
		MessageInfos:      file_ibc_applications_fee_v1_genesis_proto_msgTypes,
	}.Build()
	File_ibc_applications_fee_v1_genesis_proto = out.File
	file_ibc_applications_fee_v1_genesis_proto_rawDesc = nil
	file_ibc_applications_fee_v1_genesis_proto_goTypes = nil
	file_ibc_applications_fee_v1_genesis_proto_depIdxs = nil
}
