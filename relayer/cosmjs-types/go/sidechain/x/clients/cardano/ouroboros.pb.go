// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        (unknown)
// source: ibc/lightclients/ouroboros/ouroboros.proto

package cardano

import (
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IBC handler token uint (policyID + name), in hex format
	HandlerTokenUnit string `protobuf:"bytes,1,opt,name=handler_token_unit,json=handlerTokenUnit,proto3" json:"handler_token_unit,omitempty"`
	// IBC client token policyID, in hex format
	ClientPolicyId string `protobuf:"bytes,2,opt,name=client_policy_id,json=clientPolicyId,proto3" json:"client_policy_id,omitempty"`
	// IBC connection token policyID, in hex format
	ConnectionPolicyId string `protobuf:"bytes,3,opt,name=connection_policy_id,json=connectionPolicyId,proto3" json:"connection_policy_id,omitempty"`
	// IBC channel token policyID, in hex format
	ChannelPolicyId string `protobuf:"bytes,4,opt,name=channel_policy_id,json=channelPolicyId,proto3" json:"channel_policy_id,omitempty"`
}

func (x *TokenConfigs) Reset() {
	*x = TokenConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenConfigs) ProtoMessage() {}

func (x *TokenConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenConfigs.ProtoReflect.Descriptor instead.
func (*TokenConfigs) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{0}
}

func (x *TokenConfigs) GetHandlerTokenUnit() string {
	if x != nil {
		return x.HandlerTokenUnit
	}
	return ""
}

func (x *TokenConfigs) GetClientPolicyId() string {
	if x != nil {
		return x.ClientPolicyId
	}
	return ""
}

func (x *TokenConfigs) GetConnectionPolicyId() string {
	if x != nil {
		return x.ConnectionPolicyId
	}
	return ""
}

func (x *TokenConfigs) GetChannelPolicyId() string {
	if x != nil {
		return x.ChannelPolicyId
	}
	return ""
}

type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the revision that the client is currently on
	RevisionNumber uint64 `protobuf:"varint,1,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	// the height within the given revision
	RevisionHeight uint64 `protobuf:"varint,2,opt,name=revision_height,json=revisionHeight,proto3" json:"revision_height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

func (x *Height) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{1}
}

func (x *Height) GetRevisionNumber() uint64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *Height) GetRevisionHeight() uint64 {
	if x != nil {
		return x.RevisionHeight
	}
	return 0
}

// ConsensusState defines the consensus state from Tendermint.
type ConsensusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp that corresponds to the block height in which the ConsensusState
	// was stored. Will be Chain start time + slot
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Slot at consensus height
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *ConsensusState) Reset() {
	*x = ConsensusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusState) ProtoMessage() {}

func (x *ConsensusState) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusState.ProtoReflect.Descriptor instead.
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{2}
}

func (x *ConsensusState) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConsensusState) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// vrf key hash of pool operator
	VrfKeyHash string `protobuf:"bytes,1,opt,name=vrf_key_hash,json=vrfKeyHash,proto3" json:"vrf_key_hash,omitempty"`
	// pool id of operator
	PoolId string `protobuf:"bytes,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{3}
}

func (x *Validator) GetVrfKeyHash() string {
	if x != nil {
		return x.VrfKeyHash
	}
	return ""
}

func (x *Validator) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type BlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block number
	Height *Height `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	// Slot number
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	// Block hash
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hash of previous block
	PrevHash string `protobuf:"bytes,4,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// Epoch number
	EpochNo uint64 `protobuf:"varint,5,opt,name=epoch_no,json=epochNo,proto3" json:"epoch_no,omitempty"`
	// Hex string of block header to cbor
	HeaderCbor string `protobuf:"bytes,6,opt,name=header_cbor,json=headerCbor,proto3" json:"header_cbor,omitempty"`
	// Hex string of block txs to cbor
	BodyCbor string `protobuf:"bytes,7,opt,name=body_cbor,json=bodyCbor,proto3" json:"body_cbor,omitempty"`
	// Hex string of current epoch's epoch nonce, calculated at the start of each epoch,
	// calculated by evolving nonce of block inside epoch and last block nonce of prev block
	// Used to construct vrf value, also to verify slot leader is valid
	EpochNonce string `protobuf:"bytes,8,opt,name=epoch_nonce,json=epochNonce,proto3" json:"epoch_nonce,omitempty"`
	// Time stamp of current block
	Timestamp uint64 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Chain id
	ChainId string `protobuf:"bytes,10,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
}

func (x *BlockData) Reset() {
	*x = BlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockData) ProtoMessage() {}

func (x *BlockData) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockData.ProtoReflect.Descriptor instead.
func (*BlockData) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{4}
}

func (x *BlockData) GetHeight() *Height {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *BlockData) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BlockData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockData) GetPrevHash() string {
	if x != nil {
		return x.PrevHash
	}
	return ""
}

func (x *BlockData) GetEpochNo() uint64 {
	if x != nil {
		return x.EpochNo
	}
	return 0
}

func (x *BlockData) GetHeaderCbor() string {
	if x != nil {
		return x.HeaderCbor
	}
	return ""
}

func (x *BlockData) GetBodyCbor() string {
	if x != nil {
		return x.BodyCbor
	}
	return ""
}

func (x *BlockData) GetEpochNonce() string {
	if x != nil {
		return x.EpochNonce
	}
	return ""
}

func (x *BlockData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockData) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chain id
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Latest height the client was updated to
	LatestHeight *Height `protobuf:"bytes,2,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	// Block height when the client was frozen due to a misbehaviour
	FrozenHeight *Height `protobuf:"bytes,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	// To support finality, this state will be mark as finality after `valid_after` slots, default 0, unit: slot
	ValidAfter uint64 `protobuf:"varint,4,opt,name=valid_after,json=validAfter,proto3" json:"valid_after,omitempty"`
	// Time when chain start
	GenesisTime uint64 `protobuf:"varint,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	// Epoch number of current chain state
	CurrentEpoch uint64 `protobuf:"varint,6,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	// Number of slots of this current epoch
	EpochLength uint64 `protobuf:"varint,7,opt,name=epoch_length,json=epochLength,proto3" json:"epoch_length,omitempty"`
	// Number of slots of per KES period
	SlotPerKesPeriod uint64 `protobuf:"varint,8,opt,name=slot_per_kes_period,json=slotPerKesPeriod,proto3" json:"slot_per_kes_period,omitempty"`
	// Current epoch validator set
	CurrentValidatorSet []*Validator `protobuf:"bytes,9,rep,name=current_validator_set,json=currentValidatorSet,proto3" json:"current_validator_set,omitempty"`
	// Next epoch validator set
	NextValidatorSet []*Validator `protobuf:"bytes,10,rep,name=next_validator_set,json=nextValidatorSet,proto3" json:"next_validator_set,omitempty"`
	TrustingPeriod   uint64       `protobuf:"varint,11,opt,name=trusting_period,json=trustingPeriod,proto3" json:"trusting_period,omitempty"`
	// Path at which next upgraded client will be committed.
	UpgradePath []string `protobuf:"bytes,12,rep,name=upgrade_path,json=upgradePath,proto3" json:"upgrade_path,omitempty"`
	// IBC related auth token policy configs
	TokenConfigs *TokenConfigs `protobuf:"bytes,13,opt,name=token_configs,json=tokenConfigs,proto3" json:"token_configs,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

func (x *ClientState) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{5}
}

func (x *ClientState) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ClientState) GetLatestHeight() *Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *ClientState) GetFrozenHeight() *Height {
	if x != nil {
		return x.FrozenHeight
	}
	return nil
}

func (x *ClientState) GetValidAfter() uint64 {
	if x != nil {
		return x.ValidAfter
	}
	return 0
}

func (x *ClientState) GetGenesisTime() uint64 {
	if x != nil {
		return x.GenesisTime
	}
	return 0
}

func (x *ClientState) GetCurrentEpoch() uint64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *ClientState) GetEpochLength() uint64 {
	if x != nil {
		return x.EpochLength
	}
	return 0
}

func (x *ClientState) GetSlotPerKesPeriod() uint64 {
	if x != nil {
		return x.SlotPerKesPeriod
	}
	return 0
}

func (x *ClientState) GetCurrentValidatorSet() []*Validator {
	if x != nil {
		return x.CurrentValidatorSet
	}
	return nil
}

func (x *ClientState) GetNextValidatorSet() []*Validator {
	if x != nil {
		return x.NextValidatorSet
	}
	return nil
}

func (x *ClientState) GetTrustingPeriod() uint64 {
	if x != nil {
		return x.TrustingPeriod
	}
	return 0
}

func (x *ClientState) GetUpgradePath() []string {
	if x != nil {
		return x.UpgradePath
	}
	return nil
}

func (x *ClientState) GetTokenConfigs() *TokenConfigs {
	if x != nil {
		return x.TokenConfigs
	}
	return nil
}

type Misbehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClientID is deprecated
	//
	// Deprecated: Do not use.
	ClientId    string     `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	BlockData_1 *BlockData `protobuf:"bytes,2,opt,name=block_data_1,json=blockData1,proto3" json:"block_data_1,omitempty"`
	BlockData_2 *BlockData `protobuf:"bytes,3,opt,name=block_data_2,json=blockData2,proto3" json:"block_data_2,omitempty"`
}

func (x *Misbehaviour) Reset() {
	*x = Misbehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Misbehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Misbehaviour) ProtoMessage() {}

func (x *Misbehaviour) ProtoReflect() protoreflect.Message {
	mi := &file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Misbehaviour.ProtoReflect.Descriptor instead.
func (*Misbehaviour) Descriptor() ([]byte, []int) {
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *Misbehaviour) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Misbehaviour) GetBlockData_1() *BlockData {
	if x != nil {
		return x.BlockData_1
	}
	return nil
}

func (x *Misbehaviour) GetBlockData_2() *BlockData {
	if x != nil {
		return x.BlockData_2
	}
	return nil
}

var File_ibc_lightclients_ouroboros_ouroboros_proto protoreflect.FileDescriptor

var file_ibc_lightclients_ouroboros_ouroboros_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x69, 0x62, 0x63, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x6f, 0x75, 0x72, 0x6f, 0x62, 0x6f, 0x72, 0x6f, 0x73, 0x2f, 0x6f, 0x75, 0x72,
	0x6f, 0x62, 0x6f, 0x72, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x62,
	0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e,
	0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x01, 0x0a, 0x0c,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x64, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x64, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0x22, 0x48,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x4c, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x72, 0x66, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x72, 0x66,
	0x4b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xc1, 0x02, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x62, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x62, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x63, 0x62, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x43, 0x62, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xb2, 0x05, 0x0a, 0x0b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x43, 0x0a, 0x0d, 0x66, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x13, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x6c, 0x6f, 0x74, 0x50, 0x65,
	0x72, 0x4b, 0x65, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x55, 0x0a, 0x15, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x4f, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49,
	0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22,
	0xdf, 0x01, 0x0a, 0x0c, 0x4d, 0x69, 0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72,
	0x12, 0x1f, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0e, 0xe2, 0xde, 0x1f, 0x0a,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x31, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x31, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x0e, 0xe2, 0xde, 0x1f, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x32, 0x52,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x32, 0x3a, 0x04, 0x88, 0xa0, 0x1f,
	0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x73, 0x69, 0x64, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescOnce sync.Once
	file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescData = file_ibc_lightclients_ouroboros_ouroboros_proto_rawDesc
)

func file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescGZIP() []byte {
	file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescOnce.Do(func() {
		file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescData)
	})
	return file_ibc_lightclients_ouroboros_ouroboros_proto_rawDescData
}

var file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ibc_lightclients_ouroboros_ouroboros_proto_goTypes = []interface{}{
	(*TokenConfigs)(nil),   // 0: ibc.clients.cardano.v1.TokenConfigs
	(*Height)(nil),         // 1: ibc.clients.cardano.v1.Height
	(*ConsensusState)(nil), // 2: ibc.clients.cardano.v1.ConsensusState
	(*Validator)(nil),      // 3: ibc.clients.cardano.v1.Validator
	(*BlockData)(nil),      // 4: ibc.clients.cardano.v1.BlockData
	(*ClientState)(nil),    // 5: ibc.clients.cardano.v1.ClientState
	(*Misbehaviour)(nil),   // 6: ibc.clients.cardano.v1.Misbehaviour
}
var file_ibc_lightclients_ouroboros_ouroboros_proto_depIdxs = []int32{
	1, // 0: ibc.clients.cardano.v1.BlockData.height:type_name -> ibc.clients.cardano.v1.Height
	1, // 1: ibc.clients.cardano.v1.ClientState.latest_height:type_name -> ibc.clients.cardano.v1.Height
	1, // 2: ibc.clients.cardano.v1.ClientState.frozen_height:type_name -> ibc.clients.cardano.v1.Height
	3, // 3: ibc.clients.cardano.v1.ClientState.current_validator_set:type_name -> ibc.clients.cardano.v1.Validator
	3, // 4: ibc.clients.cardano.v1.ClientState.next_validator_set:type_name -> ibc.clients.cardano.v1.Validator
	0, // 5: ibc.clients.cardano.v1.ClientState.token_configs:type_name -> ibc.clients.cardano.v1.TokenConfigs
	4, // 6: ibc.clients.cardano.v1.Misbehaviour.block_data_1:type_name -> ibc.clients.cardano.v1.BlockData
	4, // 7: ibc.clients.cardano.v1.Misbehaviour.block_data_2:type_name -> ibc.clients.cardano.v1.BlockData
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ibc_lightclients_ouroboros_ouroboros_proto_init() }
func file_ibc_lightclients_ouroboros_ouroboros_proto_init() {
	if File_ibc_lightclients_ouroboros_ouroboros_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Misbehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_lightclients_ouroboros_ouroboros_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_lightclients_ouroboros_ouroboros_proto_goTypes,
		DependencyIndexes: file_ibc_lightclients_ouroboros_ouroboros_proto_depIdxs,
		MessageInfos:      file_ibc_lightclients_ouroboros_ouroboros_proto_msgTypes,
	}.Build()
	File_ibc_lightclients_ouroboros_ouroboros_proto = out.File
	file_ibc_lightclients_ouroboros_ouroboros_proto_rawDesc = nil
	file_ibc_lightclients_ouroboros_ouroboros_proto_goTypes = nil
	file_ibc_lightclients_ouroboros_ouroboros_proto_depIdxs = nil
}
