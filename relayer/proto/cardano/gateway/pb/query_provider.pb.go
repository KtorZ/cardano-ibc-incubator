// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: query_provider.proto

package pb

import (
	context "context"
	_ "github.com/gogo/protobuf/gogoproto"
	any1 "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the revision that the client is currently on
	RevisionNumber uint64 `protobuf:"varint,1,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	// the height within the given revision
	RevisionHeight uint64 `protobuf:"varint,2,opt,name=revision_height,json=revisionHeight,proto3" json:"revision_height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

func (x *Height) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{0}
}

func (x *Height) GetRevisionNumber() uint64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *Height) GetRevisionHeight() uint64 {
	if x != nil {
		return x.RevisionHeight
	}
	return 0
}

type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VrfKeyHash string `protobuf:"bytes,1,opt,name=vrf_key_hash,json=vrfKeyHash,proto3" json:"vrf_key_hash,omitempty"`
	PoolId     string `protobuf:"bytes,2,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{1}
}

func (x *Validator) GetVrfKeyHash() string {
	if x != nil {
		return x.VrfKeyHash
	}
	return ""
}

func (x *Validator) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type MsgGetLastHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGetLastHeightRequest) Reset() {
	*x = MsgGetLastHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetLastHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetLastHeightRequest) ProtoMessage() {}

func (x *MsgGetLastHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetLastHeightRequest.ProtoReflect.Descriptor instead.
func (*MsgGetLastHeightRequest) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{2}
}

type MsgGetLastHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MsgGetLastHeightResponse) Reset() {
	*x = MsgGetLastHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetLastHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetLastHeightResponse) ProtoMessage() {}

func (x *MsgGetLastHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetLastHeightResponse.ProtoReflect.Descriptor instead.
func (*MsgGetLastHeightResponse) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{3}
}

func (x *MsgGetLastHeightResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MsgGetClientStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MsgGetClientStateRequest) Reset() {
	*x = MsgGetClientStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetClientStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetClientStateRequest) ProtoMessage() {}

func (x *MsgGetClientStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetClientStateRequest.ProtoReflect.Descriptor instead.
func (*MsgGetClientStateRequest) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{4}
}

func (x *MsgGetClientStateRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MsgGetClientStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId             string               `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	LatestHeight        *Height              `protobuf:"bytes,2,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	FrozenHeight        *Height              `protobuf:"bytes,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	ValidAfter          uint64               `protobuf:"varint,4,opt,name=valid_after,json=validAfter,proto3" json:"valid_after,omitempty"`
	GenesisTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	CurrentEpoch        uint64               `protobuf:"varint,6,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	CurrentValidatorSet []*Validator         `protobuf:"bytes,7,rep,name=currentValidatorSet,proto3" json:"currentValidatorSet,omitempty"`
	NextValidatorSet    []*Validator         `protobuf:"bytes,8,rep,name=nextValidatorSet,proto3" json:"nextValidatorSet,omitempty"`
	EpochLength         uint64               `protobuf:"varint,9,opt,name=epochLength,proto3" json:"epochLength,omitempty"`
	SlotPerKesPeriod    uint64               `protobuf:"varint,10,opt,name=slotPerKesPeriod,proto3" json:"slotPerKesPeriod,omitempty"`
	UpgradePath         []string             `protobuf:"bytes,11,rep,name=upgradePath,proto3" json:"upgradePath,omitempty"`
}

func (x *MsgGetClientStateResponse) Reset() {
	*x = MsgGetClientStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetClientStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetClientStateResponse) ProtoMessage() {}

func (x *MsgGetClientStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetClientStateResponse.ProtoReflect.Descriptor instead.
func (*MsgGetClientStateResponse) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{5}
}

func (x *MsgGetClientStateResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgGetClientStateResponse) GetLatestHeight() *Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *MsgGetClientStateResponse) GetFrozenHeight() *Height {
	if x != nil {
		return x.FrozenHeight
	}
	return nil
}

func (x *MsgGetClientStateResponse) GetValidAfter() uint64 {
	if x != nil {
		return x.ValidAfter
	}
	return 0
}

func (x *MsgGetClientStateResponse) GetGenesisTime() *timestamp.Timestamp {
	if x != nil {
		return x.GenesisTime
	}
	return nil
}

func (x *MsgGetClientStateResponse) GetCurrentEpoch() uint64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *MsgGetClientStateResponse) GetCurrentValidatorSet() []*Validator {
	if x != nil {
		return x.CurrentValidatorSet
	}
	return nil
}

func (x *MsgGetClientStateResponse) GetNextValidatorSet() []*Validator {
	if x != nil {
		return x.NextValidatorSet
	}
	return nil
}

func (x *MsgGetClientStateResponse) GetEpochLength() uint64 {
	if x != nil {
		return x.EpochLength
	}
	return 0
}

func (x *MsgGetClientStateResponse) GetSlotPerKesPeriod() uint64 {
	if x != nil {
		return x.SlotPerKesPeriod
	}
	return 0
}

func (x *MsgGetClientStateResponse) GetUpgradePath() []string {
	if x != nil {
		return x.UpgradePath
	}
	return nil
}

type MsgGetConsensusStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MsgGetConsensusStateRequest) Reset() {
	*x = MsgGetConsensusStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetConsensusStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetConsensusStateRequest) ProtoMessage() {}

func (x *MsgGetConsensusStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetConsensusStateRequest.ProtoReflect.Descriptor instead.
func (*MsgGetConsensusStateRequest) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{6}
}

func (x *MsgGetConsensusStateRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MsgGetConsensusStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      uint64               `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Height    *Height              `protobuf:"bytes,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *MsgGetConsensusStateResponse) Reset() {
	*x = MsgGetConsensusStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetConsensusStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetConsensusStateResponse) ProtoMessage() {}

func (x *MsgGetConsensusStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetConsensusStateResponse.ProtoReflect.Descriptor instead.
func (*MsgGetConsensusStateResponse) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{7}
}

func (x *MsgGetConsensusStateResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *MsgGetConsensusStateResponse) GetHeight() *Height {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *MsgGetConsensusStateResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type QueryCardanoStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryCardanoStateRequest) Reset() {
	*x = QueryCardanoStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCardanoStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCardanoStateRequest) ProtoMessage() {}

func (x *QueryCardanoStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCardanoStateRequest.ProtoReflect.Descriptor instead.
func (*QueryCardanoStateRequest) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCardanoStateRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type QueryCardanoStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// client state associated with the request identifier
	ClientState *any1.Any `protobuf:"bytes,1,opt,name=client_state,json=clientState,proto3" json:"client_state,omitempty"`
	// consensus state associated with the request identifier
	ConsensusState *any1.Any `protobuf:"bytes,2,opt,name=consensus_state,json=consensusState,proto3" json:"consensus_state,omitempty"`
}

func (x *QueryCardanoStateResponse) Reset() {
	*x = QueryCardanoStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCardanoStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCardanoStateResponse) ProtoMessage() {}

func (x *QueryCardanoStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCardanoStateResponse.ProtoReflect.Descriptor instead.
func (*QueryCardanoStateResponse) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{9}
}

func (x *QueryCardanoStateResponse) GetClientState() *any1.Any {
	if x != nil {
		return x.ClientState
	}
	return nil
}

func (x *QueryCardanoStateResponse) GetConsensusState() *any1.Any {
	if x != nil {
		return x.ConsensusState
	}
	return nil
}

type QueryCardanoClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId             string               `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	LatestHeight        *Height              `protobuf:"bytes,2,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	FrozenHeight        *Height              `protobuf:"bytes,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	ValidAfter          uint64               `protobuf:"varint,4,opt,name=valid_after,json=validAfter,proto3" json:"valid_after,omitempty"`
	GenesisTime         *timestamp.Timestamp `protobuf:"bytes,5,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	CurrentEpoch        uint64               `protobuf:"varint,6,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	CurrentValidatorSet []*Validator         `protobuf:"bytes,7,rep,name=currentValidatorSet,proto3" json:"currentValidatorSet,omitempty"`
	NextValidatorSet    []*Validator         `protobuf:"bytes,8,rep,name=nextValidatorSet,proto3" json:"nextValidatorSet,omitempty"`
	EpochLength         uint64               `protobuf:"varint,9,opt,name=epochLength,proto3" json:"epochLength,omitempty"`
	SlotPerKesPeriod    uint64               `protobuf:"varint,10,opt,name=slotPerKesPeriod,proto3" json:"slotPerKesPeriod,omitempty"`
	UpgradePath         []string             `protobuf:"bytes,11,rep,name=upgradePath,proto3" json:"upgradePath,omitempty"`
	Height              *Height              `protobuf:"bytes,12,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *QueryCardanoClientState) Reset() {
	*x = QueryCardanoClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCardanoClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCardanoClientState) ProtoMessage() {}

func (x *QueryCardanoClientState) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCardanoClientState.ProtoReflect.Descriptor instead.
func (*QueryCardanoClientState) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{10}
}

func (x *QueryCardanoClientState) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *QueryCardanoClientState) GetLatestHeight() *Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *QueryCardanoClientState) GetFrozenHeight() *Height {
	if x != nil {
		return x.FrozenHeight
	}
	return nil
}

func (x *QueryCardanoClientState) GetValidAfter() uint64 {
	if x != nil {
		return x.ValidAfter
	}
	return 0
}

func (x *QueryCardanoClientState) GetGenesisTime() *timestamp.Timestamp {
	if x != nil {
		return x.GenesisTime
	}
	return nil
}

func (x *QueryCardanoClientState) GetCurrentEpoch() uint64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *QueryCardanoClientState) GetCurrentValidatorSet() []*Validator {
	if x != nil {
		return x.CurrentValidatorSet
	}
	return nil
}

func (x *QueryCardanoClientState) GetNextValidatorSet() []*Validator {
	if x != nil {
		return x.NextValidatorSet
	}
	return nil
}

func (x *QueryCardanoClientState) GetEpochLength() uint64 {
	if x != nil {
		return x.EpochLength
	}
	return 0
}

func (x *QueryCardanoClientState) GetSlotPerKesPeriod() uint64 {
	if x != nil {
		return x.SlotPerKesPeriod
	}
	return 0
}

func (x *QueryCardanoClientState) GetUpgradePath() []string {
	if x != nil {
		return x.UpgradePath
	}
	return nil
}

func (x *QueryCardanoClientState) GetHeight() *Height {
	if x != nil {
		return x.Height
	}
	return nil
}

type QueryCardanoConsensusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      uint64               `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *QueryCardanoConsensusState) Reset() {
	*x = QueryCardanoConsensusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_provider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCardanoConsensusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCardanoConsensusState) ProtoMessage() {}

func (x *QueryCardanoConsensusState) ProtoReflect() protoreflect.Message {
	mi := &file_query_provider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCardanoConsensusState.ProtoReflect.Descriptor instead.
func (*QueryCardanoConsensusState) Descriptor() ([]byte, []int) {
	return file_query_provider_proto_rawDescGZIP(), []int{11}
}

func (x *QueryCardanoConsensusState) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *QueryCardanoConsensusState) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_query_provider_proto protoreflect.FileDescriptor

var file_query_provider_proto_rawDesc = []byte{
	0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x0a, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64,
	0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00,
	0x98, 0xa0, 0x1f, 0x00, 0x22, 0x4c, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x72, 0x66, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x72, 0x66, 0x4b, 0x65, 0x79, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x3a, 0x04, 0x88, 0xa0,
	0x1f, 0x00, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a,
	0x18, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x32, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb9, 0x04, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3b,
	0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x67, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x67, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x4b, 0x0a,
	0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x10, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6c, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x4b, 0x65,
	0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73,
	0x6c, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x4b, 0x65, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x22, 0x35, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x4d, 0x73, 0x67,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x2e, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x32, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xe7, 0x04, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x61,
	0x6e, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x6c, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x4b, 0x65, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x6c, 0x6f, 0x74, 0x50, 0x65, 0x72,
	0x4b, 0x65, 0x73, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6a, 0x0a, 0x1a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xcc, 0x03, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x69, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x10, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d,
	0x73, 0x67, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x73, 0x67, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_query_provider_proto_rawDescOnce sync.Once
	file_query_provider_proto_rawDescData = file_query_provider_proto_rawDesc
)

func file_query_provider_proto_rawDescGZIP() []byte {
	file_query_provider_proto_rawDescOnce.Do(func() {
		file_query_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_query_provider_proto_rawDescData)
	})
	return file_query_provider_proto_rawDescData
}

var file_query_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_query_provider_proto_goTypes = []interface{}{
	(*Height)(nil),                       // 0: query_provider.Height
	(*Validator)(nil),                    // 1: query_provider.Validator
	(*MsgGetLastHeightRequest)(nil),      // 2: query_provider.MsgGetLastHeightRequest
	(*MsgGetLastHeightResponse)(nil),     // 3: query_provider.MsgGetLastHeightResponse
	(*MsgGetClientStateRequest)(nil),     // 4: query_provider.MsgGetClientStateRequest
	(*MsgGetClientStateResponse)(nil),    // 5: query_provider.MsgGetClientStateResponse
	(*MsgGetConsensusStateRequest)(nil),  // 6: query_provider.MsgGetConsensusStateRequest
	(*MsgGetConsensusStateResponse)(nil), // 7: query_provider.MsgGetConsensusStateResponse
	(*QueryCardanoStateRequest)(nil),     // 8: query_provider.QueryCardanoStateRequest
	(*QueryCardanoStateResponse)(nil),    // 9: query_provider.QueryCardanoStateResponse
	(*QueryCardanoClientState)(nil),      // 10: query_provider.QueryCardanoClientState
	(*QueryCardanoConsensusState)(nil),   // 11: query_provider.QueryCardanoConsensusState
	(*timestamp.Timestamp)(nil),          // 12: google.protobuf.Timestamp
	(*any1.Any)(nil),                     // 13: google.protobuf.Any
}
var file_query_provider_proto_depIdxs = []int32{
	0,  // 0: query_provider.MsgGetClientStateResponse.latest_height:type_name -> query_provider.Height
	0,  // 1: query_provider.MsgGetClientStateResponse.frozen_height:type_name -> query_provider.Height
	12, // 2: query_provider.MsgGetClientStateResponse.genesis_time:type_name -> google.protobuf.Timestamp
	1,  // 3: query_provider.MsgGetClientStateResponse.currentValidatorSet:type_name -> query_provider.Validator
	1,  // 4: query_provider.MsgGetClientStateResponse.nextValidatorSet:type_name -> query_provider.Validator
	0,  // 5: query_provider.MsgGetConsensusStateResponse.height:type_name -> query_provider.Height
	12, // 6: query_provider.MsgGetConsensusStateResponse.Timestamp:type_name -> google.protobuf.Timestamp
	13, // 7: query_provider.QueryCardanoStateResponse.client_state:type_name -> google.protobuf.Any
	13, // 8: query_provider.QueryCardanoStateResponse.consensus_state:type_name -> google.protobuf.Any
	0,  // 9: query_provider.QueryCardanoClientState.latest_height:type_name -> query_provider.Height
	0,  // 10: query_provider.QueryCardanoClientState.frozen_height:type_name -> query_provider.Height
	12, // 11: query_provider.QueryCardanoClientState.genesis_time:type_name -> google.protobuf.Timestamp
	1,  // 12: query_provider.QueryCardanoClientState.currentValidatorSet:type_name -> query_provider.Validator
	1,  // 13: query_provider.QueryCardanoClientState.nextValidatorSet:type_name -> query_provider.Validator
	0,  // 14: query_provider.QueryCardanoClientState.height:type_name -> query_provider.Height
	12, // 15: query_provider.QueryCardanoConsensusState.Timestamp:type_name -> google.protobuf.Timestamp
	2,  // 16: query_provider.QueryProviderService.QueryLastestHeight:input_type -> query_provider.MsgGetLastHeightRequest
	4,  // 17: query_provider.QueryProviderService.QueryClientState:input_type -> query_provider.MsgGetClientStateRequest
	6,  // 18: query_provider.QueryProviderService.QueryConsensusState:input_type -> query_provider.MsgGetConsensusStateRequest
	8,  // 19: query_provider.QueryProviderService.QueryCardanoState:input_type -> query_provider.QueryCardanoStateRequest
	3,  // 20: query_provider.QueryProviderService.QueryLastestHeight:output_type -> query_provider.MsgGetLastHeightResponse
	5,  // 21: query_provider.QueryProviderService.QueryClientState:output_type -> query_provider.MsgGetClientStateResponse
	7,  // 22: query_provider.QueryProviderService.QueryConsensusState:output_type -> query_provider.MsgGetConsensusStateResponse
	9,  // 23: query_provider.QueryProviderService.QueryCardanoState:output_type -> query_provider.QueryCardanoStateResponse
	20, // [20:24] is the sub-list for method output_type
	16, // [16:20] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_query_provider_proto_init() }
func file_query_provider_proto_init() {
	if File_query_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_query_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetLastHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetLastHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetClientStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetClientStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetConsensusStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetConsensusStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCardanoStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCardanoStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCardanoClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_provider_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCardanoConsensusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query_provider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_provider_proto_goTypes,
		DependencyIndexes: file_query_provider_proto_depIdxs,
		MessageInfos:      file_query_provider_proto_msgTypes,
	}.Build()
	File_query_provider_proto = out.File
	file_query_provider_proto_rawDesc = nil
	file_query_provider_proto_goTypes = nil
	file_query_provider_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryProviderServiceClient is the client API for QueryProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryProviderServiceClient interface {
	QueryLastestHeight(ctx context.Context, in *MsgGetLastHeightRequest, opts ...grpc.CallOption) (*MsgGetLastHeightResponse, error)
	QueryClientState(ctx context.Context, in *MsgGetClientStateRequest, opts ...grpc.CallOption) (*MsgGetClientStateResponse, error)
	QueryConsensusState(ctx context.Context, in *MsgGetConsensusStateRequest, opts ...grpc.CallOption) (*MsgGetConsensusStateResponse, error)
	QueryCardanoState(ctx context.Context, in *QueryCardanoStateRequest, opts ...grpc.CallOption) (*QueryCardanoStateResponse, error)
}

type queryProviderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryProviderServiceClient(cc grpc.ClientConnInterface) QueryProviderServiceClient {
	return &queryProviderServiceClient{cc}
}

func (c *queryProviderServiceClient) QueryLastestHeight(ctx context.Context, in *MsgGetLastHeightRequest, opts ...grpc.CallOption) (*MsgGetLastHeightResponse, error) {
	out := new(MsgGetLastHeightResponse)
	err := c.cc.Invoke(ctx, "/query_provider.QueryProviderService/QueryLastestHeight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryProviderServiceClient) QueryClientState(ctx context.Context, in *MsgGetClientStateRequest, opts ...grpc.CallOption) (*MsgGetClientStateResponse, error) {
	out := new(MsgGetClientStateResponse)
	err := c.cc.Invoke(ctx, "/query_provider.QueryProviderService/QueryClientState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryProviderServiceClient) QueryConsensusState(ctx context.Context, in *MsgGetConsensusStateRequest, opts ...grpc.CallOption) (*MsgGetConsensusStateResponse, error) {
	out := new(MsgGetConsensusStateResponse)
	err := c.cc.Invoke(ctx, "/query_provider.QueryProviderService/QueryConsensusState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryProviderServiceClient) QueryCardanoState(ctx context.Context, in *QueryCardanoStateRequest, opts ...grpc.CallOption) (*QueryCardanoStateResponse, error) {
	out := new(QueryCardanoStateResponse)
	err := c.cc.Invoke(ctx, "/query_provider.QueryProviderService/QueryCardanoState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryProviderServiceServer is the server API for QueryProviderService service.
type QueryProviderServiceServer interface {
	QueryLastestHeight(context.Context, *MsgGetLastHeightRequest) (*MsgGetLastHeightResponse, error)
	QueryClientState(context.Context, *MsgGetClientStateRequest) (*MsgGetClientStateResponse, error)
	QueryConsensusState(context.Context, *MsgGetConsensusStateRequest) (*MsgGetConsensusStateResponse, error)
	QueryCardanoState(context.Context, *QueryCardanoStateRequest) (*QueryCardanoStateResponse, error)
}

// UnimplementedQueryProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQueryProviderServiceServer struct {
}

func (*UnimplementedQueryProviderServiceServer) QueryLastestHeight(context.Context, *MsgGetLastHeightRequest) (*MsgGetLastHeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryLastestHeight not implemented")
}
func (*UnimplementedQueryProviderServiceServer) QueryClientState(context.Context, *MsgGetClientStateRequest) (*MsgGetClientStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryClientState not implemented")
}
func (*UnimplementedQueryProviderServiceServer) QueryConsensusState(context.Context, *MsgGetConsensusStateRequest) (*MsgGetConsensusStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryConsensusState not implemented")
}
func (*UnimplementedQueryProviderServiceServer) QueryCardanoState(context.Context, *QueryCardanoStateRequest) (*QueryCardanoStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCardanoState not implemented")
}

func RegisterQueryProviderServiceServer(s *grpc.Server, srv QueryProviderServiceServer) {
	s.RegisterService(&_QueryProviderService_serviceDesc, srv)
}

func _QueryProviderService_QueryLastestHeight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetLastHeightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryProviderServiceServer).QueryLastestHeight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/query_provider.QueryProviderService/QueryLastestHeight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryProviderServiceServer).QueryLastestHeight(ctx, req.(*MsgGetLastHeightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryProviderService_QueryClientState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetClientStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryProviderServiceServer).QueryClientState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/query_provider.QueryProviderService/QueryClientState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryProviderServiceServer).QueryClientState(ctx, req.(*MsgGetClientStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryProviderService_QueryConsensusState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetConsensusStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryProviderServiceServer).QueryConsensusState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/query_provider.QueryProviderService/QueryConsensusState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryProviderServiceServer).QueryConsensusState(ctx, req.(*MsgGetConsensusStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryProviderService_QueryCardanoState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryCardanoStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryProviderServiceServer).QueryCardanoState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/query_provider.QueryProviderService/QueryCardanoState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryProviderServiceServer).QueryCardanoState(ctx, req.(*QueryCardanoStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueryProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "query_provider.QueryProviderService",
	HandlerType: (*QueryProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryLastestHeight",
			Handler:    _QueryProviderService_QueryLastestHeight_Handler,
		},
		{
			MethodName: "QueryClientState",
			Handler:    _QueryProviderService_QueryClientState_Handler,
		},
		{
			MethodName: "QueryConsensusState",
			Handler:    _QueryProviderService_QueryConsensusState_Handler,
		},
		{
			MethodName: "QueryCardanoState",
			Handler:    _QueryProviderService_QueryCardanoState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_provider.proto",
}
